1. Can you introduce yourself?
2. What are your day-to-day tasks as a DevOps engineer?
3. Can you explain the projects you have worked on?
4. What is the purpose of `.𝗴𝗶𝘁𝗶𝗴𝗻𝗼𝗿𝗲`?
5. How do `𝗴𝗶𝘁 𝗺𝗲𝗿𝗴𝗲` and `𝗴𝗶𝘁 𝗿𝗲𝗯𝗮𝘀𝗲` differ?
6. How do `𝗴𝗶𝘁 𝗿𝗲𝘀𝗲𝘁` and `𝗴𝗶𝘁 𝗿𝗲𝘃𝗲𝗿𝘁` differ?
7. How do `𝗴𝗶𝘁 𝗳𝗲𝘁𝗰𝗵` and `𝗴𝗶𝘁 𝗽𝘂𝗹𝗹` differ?
9. How do you check the 𝗱𝗶𝗳𝗳𝗲𝗿𝗲𝗻𝗰𝗲𝘀 between 𝘁𝘄𝗼 𝗰𝗼𝗺𝗺𝗶𝘁𝘀 in Git?
10. How do you check the 𝘀𝘁𝗮𝘁𝘂𝘀 of the 𝘄𝗼𝗿𝗸𝗶𝗻𝗴 𝗱𝗶𝗿𝗲𝗰𝘁𝗼𝗿𝘆 in Git?
11. While you're in the middle of working on a feature when you realize you need to address an urgent bug fix that requires your 𝗶𝗺𝗺𝗲𝗱𝗶𝗮𝘁𝗲 𝗮𝘁𝘁𝗲𝗻𝘁𝗶𝗼𝗻. How would you handle temporarily setting aside your current changes to focus on the bug fix 𝘄𝗶𝘁𝗵𝗼𝘂𝘁 𝗰𝗼𝗺𝗺𝗶𝘁𝘁𝗶𝗻𝗴 incomplete work?
12. How do you handle and resolve 𝗖𝗣𝗨-𝗿𝗲𝗹𝗮𝘁𝗲𝗱 tickets?
13. Where do you configure 𝗗𝗼𝗰𝗸𝗲𝗿 𝗛𝘂𝗯 credentials and 𝗥𝗗𝗦 credentials?
14. As the sole DevOps engineer working with a few developers, how do you 𝗰𝗼𝗹𝗹𝗮𝗯𝗼𝗿𝗮𝘁𝗲 and 𝗺𝗮𝗻𝗮𝗴𝗲 𝘁𝗮𝘀𝗸𝘀?
15. What are the differences between 𝘃𝗶𝗿𝘁𝘂𝗮𝗹𝗶𝘇𝗮𝘁𝗶𝗼𝗻 and 𝗰𝗼𝗻𝘁𝗮𝗶𝗻𝗲𝗿𝗶𝘇𝗮𝘁𝗶𝗼𝗻?
16. Can you explain 𝗩𝗣𝗖𝘀? How can you distinguish between a 𝗽𝗿𝗶𝘃𝗮𝘁𝗲 𝘀𝘂𝗯𝗻𝗲𝘁 and a 𝗽𝘂𝗯𝗹𝗶𝗰 𝘀𝘂𝗯𝗻𝗲𝘁?
17. What are 𝗡𝗔𝗖𝗟𝘀 and 𝗡𝗔𝗧 𝗴𝗮𝘁𝗲𝘄𝗮𝘆𝘀, and how are they used?
18. What are 𝗗𝗼𝗰𝗸𝗲𝗿𝗳𝗶𝗹𝗲𝘀 and 𝗽𝗶𝗽𝗲𝗹𝗶𝗻𝗲𝘀? How are they used in 𝗖𝗜/𝗖𝗗?
19. Where should 𝗡𝗲𝘅𝘂𝘀 credentials be stored securely?
20. What is 𝗠𝗮𝘃𝗲𝗻, and what are its primary uses?
21. How do you 𝗶𝗴𝗻𝗼𝗿𝗲 certain 𝗳𝗶𝗹𝗲𝘀 while creating a 𝗗𝗼𝗰𝗸𝗲𝗿𝗳𝗶𝗹𝗲?
22. What is 𝗘𝗞𝗦, and what are its benefits?
23. What is a change request, and how is it handled in a DevOps environment?
24. Can you compare 𝗡𝗟𝗕 (𝗡𝗲𝘁𝘄𝗼𝗿𝗸 𝗟𝗼𝗮𝗱 𝗕𝗮𝗹𝗮𝗻𝗰𝗲𝗿) and 𝗔𝗟𝗕 (𝗔𝗽𝗽𝗹𝗶𝗰𝗮𝘁𝗶𝗼𝗻 𝗟𝗼𝗮𝗱 𝗕𝗮𝗹𝗮𝗻𝗰𝗲𝗿)?
25. What are the differences between 𝗛𝗧𝗧𝗣 and 𝗛𝗧𝗧𝗣𝗦?
